<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.mybatis.mapper.OrderCustomMapper">
<!-- 使用mapper代理方法开发,namespace等于mapper全类名 -->
     <!-- 开启二级缓存 -->
     <cache/>
	<!-- 根据cid查询customer #{id}:其中的参数如果是简单类型，可以是value，也可以是其他名称 -->
	<!-- 查询所有用户 -->
	<select id="findUser" resultType="cn.itcast.mybatis.po.User">
		select * from user
	</select>

	<!-- 根据user_id查询用户 -->
	<select id="findUserById" parameterType="int"  resultType="cn.itcast.mybatis.po.User">
	   select * from user where id=#{id}
	</select>

	<!-- 查询订单，关联用户信息 -->
	<select id="findOrdersUser" resultType="cn.itcast.mybatis.po.OrdersCustom">
		select orders.*
		,user.username,user.sex,user.address
		from orders,user where
		orders.user_id=user.id
	</select>

	<!-- 订单查询关联用户的resultMap 将整个查询的结果映射到cn.itcast.mybatis.po.Orders中 -->
	<resultMap type="cn.itcast.mybatis.po.Orders" id="OrdersUsersResultMap">
		<!-- 配置映射的订单信息 -->
		<!-- id：指定查询列中的唯一标识，订单信息中的唯一标识，如果有多个列组成唯一标识，配置多个id column:订单信息的唯一标识列 property：订单信息的唯一标识列所映射到Orders中的那个属性 -->
		<id column="id" property="id" />
		<result column="user_id" property="user_id" />
		<result column="number" property="number" />
		<result column="createtime" property="createtime" />
		<result column="note" property="note" />

		<!-- 配置映射的关联的用户信息 -->
		<!-- associaton:用于映射关系查询单个用户的信息 property:要将关联查询的用户信息映射到Orders中的那个属性 -->
		<association property="user" javaType="cn.itcast.mybatis.po.User">
			<!-- id：关联查询用户的唯一标识 column:指定唯一标识用户信息的列 javaType:映射到User的那个属性 -->
			<id column="user_id" property="id" />
			<result column="username" property="username" />
			<result column="sex" property="sex" />
			<result column="address" property="address" />

		</association>
	</resultMap>

	<!-- 查询订单即订单明细的ResultMap 使用extends继承，不用再配置订单信息和用户信息的映射 -->
	<resultMap type="cn.itcast.mybatis.po.Orders" id="OrdersAndOrderDetaiResultMap"
		extends="OrdersUsersResultMap">
		<!-- 订单信息 -->
		<!-- <id column="id" property="id"/> <result column="user_id" property="user_id"/> 
			<result column="number" property="number"/> <result column="createtime" property="createtime"/> 
			<result column="note" property="note"/> -->
		<!-- 用户信息 -->
		<!-- <association property="user" javaType="cn.itcast.mybatis.po.User"> 
			id：关联查询用户的唯一标识 column:指定唯一标识用户信息的列 javaType:映射到User的那个属性 <id column="user_id" 
			property="id"/> <result column="username" property="username"/> <result column="sex" 
			property="sex"/> <result column="address" property="address"/> </association> -->
		<!-- 订单明细 一个订单对应多条订单明细 collecttion:对关联查询得到的多条记录映射到集合对象中 property:将关联查询得到的多条记录映射到cn.itcast.mybatis.po.Orders 
			中的private List<OrderDetail> orderDetails; ofType:指定映射到集合属性中的pojo类型 -->
		<collection property="orderDetails" ofType="cn.itcast.mybatis.po.OrderDetail">
			<!-- id:订单明细的唯一标识 property:将订单明细的唯一标识映射到cn.itcast.mybatis.po.OrderDetail的属性id -->
			<id column="orderdetail_id" property="id" />
			<result column="orders_id" property="orders_id" />
			<result column="items_id" property="items_id" />
			<result column="items_num" property="items_num" />
		</collection>
	</resultMap>

	<!-- 查询用户以及购买的商品信息ResultMap -->
	<resultMap type="cn.itcast.mybatis.po.User" id="UserAndItemsResultMap">
		<!-- 用户信息 -->
		<id column="user_id" property="id" />
		<result column="username" property="username" />
		<result column="sex" property="sex" />
		<result column="address" property="address" />

		<!-- 用户所购买的订单信息 一个用户对应多个订单，使用collection映射 -->
		<collection property="orderslist" ofType="cn.itcast.mybatis.po.Orders">
			<id column="id" property="id" />
			<result column="user_id" property="user_id" />
			<result column="number" property="number" />
			<result column="createtime" property="createtime" />
			<result column="note" property="note" />

			<!-- 订单明细，一个订单对应多个订单明细 -->
			<collection property="orderDetails" ofType="cn.itcast.mybatis.po.OrderDetail">
				<id column="orderdetail_id" property="id" />
				<result column="orders_id" property="orders_id" />
				<result column="items_id" property="items_id" />
				<result column="items_num" property="items_num" />


				<!-- 商品信息 一个订单明细对应一个商品 -->
				<association property="items" javaType="cn.itcast.mybatis.po.Items">
				    <id column="items_id" property="id"/>
				    <result column="items_name" property="name"/>
				    <result column="items_detail" property="detail"/>
				    <result column="items_price" property="price"/>
				</association>

			</collection>

		</collection>
	</resultMap>

     <!-- 延迟加载的resultMap -->
     <resultMap type="cn.itcast.mybatis.po.Orders" id="OrdersUserLazyLoadingResultMap">
         <!-- 对订单信息进行映射配置 -->
        <id column="id" property="id" />
			<result column="user_id" property="user_id" />
			<result column="number" property="number" />
			<result column="createtime" property="createtime" />
			<result column="note" property="note" />
         <!-- 实现对用户信息进行延迟加载 
         select:指定延迟加载需要执行的statement的id（是根据user_id查询用户信息的statemnt）   
         column:订单信息中关联用户信息查询的列是user_id 
         -->
         <association property="user" javaType="cn.itcast.mybatis.po.User"
          select="findUserById"   column="user_id">
             
         </association>
     </resultMap>

	<!-- 查询订单关联查询用户信息，使用resultMap -->
	<select id="findOrdersUserResultMap" resultMap="OrdersUsersResultMap">
		select orders.*
		,user.username,user.sex,user.address
		from orders,user where
		orders.user_id=user.id
	</select>

	<!-- 查询订单关联查询用户即订单明细，使用resultMap -->
	<select id="findOrdersAndOrderDetailResultMap" resultMap="OrdersAndOrderDetaiResultMap">
		select
		orders.* ,
		user.username,
		user.sex,
		user.address,
		orderdetail.id
		orderdetail_id,
		orderdetail.items_id,
		orderdetail.items_num,
		orderdetail.orders_id
		from orders,user,orderdetail
		where
		orders.user_id=user.id and orderdetail.orders_id=orders.id

	</select>

	<!-- 查询用户购买的商品信息 -->
	<select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
		 select orders.* ,
	  user.username,
	  user.sex,
	  user.address,
      orderdetail.id orderdetail_id,
      orderdetail.items_id,
      orderdetail.items_num,
      orderdetail.orders_id,
       items.name    items_name,
      items.detail   items_detail,
      items.price    items_price
	from orders,user,orderdetail,items
    where orders.user_id=user.id and orderdetail.orders_id=orders.id and items.id=orderdetail.items_id
	</select>
	
  <!-- 查询订单关联用户，用户信息需要延迟加载 -->
     <select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingResultMap">
          select * from orders
    </select> 
</mapper>