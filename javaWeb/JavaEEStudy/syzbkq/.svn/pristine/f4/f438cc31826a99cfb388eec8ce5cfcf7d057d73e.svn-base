<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.thinking.org.system.user.User">
	<resultMap type="cn.thinking.org.system.user.User" id="userAndRoleResultMap">
		<id column="user_id" property="userId" />
		<result column="loginname" property="loginname" />
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="user_rights" property="rights" />
		<result column="status" property="status" />
		<result column="userlevel" property="userlevel" />
		<result column="userorgid" property="userorgid" />
		<result column="userdeptid" property="userdeptid" />
		<result column="last_login" property="lastLogin" />
		<association property="role" column="role_id" javaType="cn.thinking.org.system.role.Role">
			<id column="role_id" property="roleId" />
			<result column="role_name" property="roleName" />
			<result column="role_rights" property="rights" />
		</association>
	</resultMap>
	<resultMap type="cn.thinking.org.system.user.User" id="userResultMap">
		<id column="user_id" property="userId" />
		<result column="loginname" property="loginname" />
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="rights" property="rights" />
		<result column="status" property="status" />
		<result column="role_id" property="roleId" />
		<result column="userlevel" property="userlevel" />
		<result column="userorgid" property="userorgid" />
		<result column="userdeptid" property="userdeptid" />
	</resultMap>
	<select id="getUserInfo" parameterType="cn.thinking.org.system.user.User"
		resultMap="userResultMap">
		select
		user_id,
		loginname,
		username,
		password,
		rights,
		status,
		role_id,
		userlevel,
		userorgid,
		userdeptid
		from tb_user where 1=1
		<if test="loginname!=null and password!=null">
			and loginname = #{loginname} and password=#{password}
		</if>
		<if test="userId!=null and userId>0">
			and user_id = #{userId}
		</if>
	</select>

	<select id="getUserAndRoleById" parameterType="int"
		resultMap="userAndRoleResultMap">
		select
		u.user_id,
		u.username,
		u.rights as user_rights,
		u.loginname,
		u.password,
		r.role_id,
		r.role_name,
		u.userlevel,
		r.rights as role_rights,
		u.userorgid,
		u.userdeptid
		from tb_user u
		left join tb_role r on u.role_id=r.role_id
		where u.status=0 and u.user_id=#{userId}
	</select>
	
	<select id="listforPageUser" parameterType="cn.thinking.org.system.user.User" resultMap="userAndRoleResultMap">
		select u.user_id,u.username,u.loginname,u.password,r.role_id,r.role_name,u.userlevel,u.last_login,u.userorgid,u.userdeptid
		from tb_user u 
		left join tb_role r on u.role_id=r.role_id 
		where u.status=0 
		<if test="loginname!=null and loginname!=''">
			and u.loginname like #{loginname}
		</if>
		<if test="roleId!=null and roleId!=0">
			and u.role_id=#{roleId} 
		</if>
		<if test="lastLoginStart!=null">
		and u.last_login&gt;=#{lastLoginStart} 
		</if>
		<if test="lastLoginEnd!=null">
		and u.last_login&lt;=#{lastLoginEnd} 
		</if>
	</select>
	<select id="getUserById" parameterType="int" resultMap="userResultMap">
		select * from tb_user u where u.user_id = #{userId}
	</select>
	<update id="updateUserRights" parameterType="cn.thinking.org.system.user.User">
		update tb_user set rights=#{rights} where user_id=#{userId}
	</update>
	
	<select id="getCountByName" parameterType="String" resultType="int">
		select count(user_id) from tb_user where loginname=#{loginname}
	</select>
	
	<update id="insertUser" parameterType="cn.thinking.org.system.user.User">
		insert into tb_user (user_id,loginname,password,username,rights,status,userlevel,userorgid,userdeptid,role_id) 
        values (#{userId},#{loginname},#{password},#{username},#{rights},#{status},#{userlevel},#{userorgid},#{userdeptid},#{roleId})
	</update>
	
	<update id="updateUserBaseInfo" parameterType="cn.thinking.org.system.user.User">
		update tb_user set 
		
		username=#{username}, 
		password=#{password},
		userorgid=#{userorgid},
		userdeptid=#{userdeptid}
		
		where user_id=#{userId}
	</update>
	
	<delete id="deleteUser" parameterType="int">
		delete from tb_user where user_id=#{userId}
	</delete>
	<update id="updateLastLogin" parameterType="cn.thinking.org.system.user.User">
		update tb_user set last_login=#{lastLogin} where user_id=#{userId}
	</update>
</mapper>